/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define CAP     1
#define NUM     2
#define NAV     3
#define SYS     4

#define NONE 0

&lt {
        tapping-term-ms = <150>;
        flavor = "hold-preferred";
};

&mt {
        tapping-term-ms = <150>;
        flavor = "tap-preferred";
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T                &kp Y &kp U  &kp I  &kp O  &kp P &none
   &none &kp A &kp S &kp D &kp F &kp G                &kp H &kp J  &kp K  &kp L &kp SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp B                &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
         &mt LCTL ESC &lt NUM TAB &mt LGUI BSPC   &mt LSFT SPC &lt NAV RET &mt LALT BSPC
                        >;
                };

                cap_layer {
                        bindings = <
   &trans &kp LS(Q) &kp LS(W) &kp LS(E) &kp LS(R) &kp LS(T)        &kp LS(Y) &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)    &trans
   &trans &mt LALT LS(A) &kp LS(S) &kp LS(D) &kp LS(F) &kp LS(G)   &kp LS(H) &kp LS(J)  &kp LS(K)  &kp LS(L)   &kp COLON  &trans
   &trans &mt LSFT LS(Z) &kp LS(X) &kp LS(C) &kp LS(V) &kp LS(B)   &kp LS(N) &kp LS(M)  &trans &trans &trans &trans
                                       &trans &trans &trans          &trans &trans &trans
                        >;
                };

                num_layer {
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT          &kp UNDER &kp N7 &kp N8 &kp N9 &kp MINUS &trans     
   &trans  &kp CARET &kp AMPS &kp ASTRK &none &none               &kp EQUAL &kp N4 &kp N5 &kp N6 &kp PLUS &trans
   &trans  &kp SQT  &kp DQT  &kp BSLH  &kp PIPE  &kp TILDE        &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N0 &trans       
                                     &trans  &trans  &kp BSPC   &kp SPC &lt SYS RET &trans
                        >;
                };
                
                nav_layer {
                        bindings = <
   &trans &kp LPAR  &kp RPAR  &kp LBKT  &kp RBKT  &kp LBRC         &kp RBRC &kp PAGE_UP  &kp UP &kp PAGE_DOWN &none &trans
   &trans &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &none              &none &kp LEFT &kp DOWN &kp RIGHT &none &trans
   &trans &tog CAP &kp LG(X) &kp LG(C) &kp LG(V) &none             &none &none &none &none &tog NAV &trans
                                   &trans &lt SYS TAB &kp BSPC   &kp SPC &trans &trans
                        >;
                };

                sys_layer {
                        bindings = <
   &trans  &rgb_ug RGB_TOG &ext_power EP_ON &none    &none  &none                    &none &none &none &none &none &trans     
   &trans  &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4      &none &none &none &none &none &trans
   &trans  &bt BT_CLR &out OUT_TOG &none      &none  &none                           &none &none &none &none &none &trans       
                                           &trans  &trans  &trans               &trans &trans &trans
                        >;
                };       
   
      };
};


&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <15>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};