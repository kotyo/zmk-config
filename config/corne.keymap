/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/modifiers.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define CAP     1
#define NUM     2
#define NUMALT  3
#define NAV     4
#define NAVALT  5
#define SYS     6

#define NONE 0

&lt {
        tapping-term-ms = <150>;
        flavor = "hold-preferred";
};

&mt {
        tapping-term-ms = <150>;
        flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
};

/ {
    behaviors {
        phtl: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP_LEFT_HOME";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7>, <8>, <9> <10>, <11>, <12>, <19>, <20>, <21> <22>, <23>, <24>, <31>, <32>, <33> <34>, <35>, <36>;
        };
        phtr: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP_RIGHT_HOME";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>, <2>, <3>, <4>, <5>, <6>, <13>, <14>, <15>, <16>, <17>, <18>, <25>, <26>, <27>, <28>, <29>, <30>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &none &kp Q &kp W &kp E &kp R &kp T                &kp Y &kp U  &kp I  &kp O  &kp P &none
   &none &phtl LSFT A &phtl LCTRL S &phtl LALT D &phtl LGUI F &kp G                &kp H &phtr RGUI J  &phtr RALT K  &phtr RCTRL L &phtr RSFT SEMI &none
   &none &kp Z &kp X &kp C &kp V &kp B                &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &none
        &none &lt NUMALT TAB &mt LSFT BSPC      &kp SPC &lt NAVALT RET &none
                        >;
                };

                cap_layer {
                        bindings = <
   &trans &kp LS(Q) &kp LS(W) &kp LS(E) &kp LS(R) &kp LS(T)        &kp LS(Y) &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)    &trans
   &trans &mt LALT LS(A) &kp LS(S) &kp LS(D) &kp LS(F) &kp LS(G)   &kp LS(H) &kp LS(J)  &kp LS(K)  &kp LS(L)   &kp COLON  &trans
   &trans &mt LSFT LS(Z) &kp LS(X) &kp LS(C) &kp LS(V) &kp LS(B)   &kp LS(N) &kp LS(M)  &trans &trans &trans &trans
                                       &trans &trans &trans          &trans &trans &trans
                        >;
                };

                num_layer {
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT          &kp UNDER &kp N7 &kp N8 &kp N9 &kp MINUS &trans     
   &trans  &kp CARET &kp AMPS &kp ASTRK &none &none               &kp EQUAL &kp N4 &kp N5 &kp N6 &kp PLUS &trans
   &trans  &kp SQT  &kp DQT  &kp BSLH  &kp PIPE  &kp TILDE        &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N0 &trans       
                                &trans  &to DEFAULT  &kp BSPC   &kp SPC &to DEFAULT &trans
                        >;
                };

                num_alt_layer {
                        bindings = <
   &trans  &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans &trans     
   &trans  &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans &trans     
   &trans  &trans &trans &trans &trans &trans          &trans &trans &trans &trans &trans &trans     
                         &trans  &trans  &mo SYS    &kp SPC &to NUM &trans
                        >;
                };
                
                nav_layer {
                        bindings = <
   &trans &kp ESC  &kp RPAR  &kp LBKT  &kp RBKT  &kp LPAR         &kp RPAR &kp HOME  &kp UP &kp END &none &trans
   &trans &kp LSHFT &kp LCTRL &kp LGUI &kp LALT &kp LBKT              &kp RBKT &kp LEFT &kp DOWN &kp RIGHT &none &trans
   &trans &kp EQUAL &kp PLUS &kp UNDER &kp MINUS &kp LBRC             &kp RBRC &kp PAGE_UP &none &kp PAGE_DOWN &trans &trans
                                   &trans &to DEFAULT &kp BSPC   &kp SPC &to DEFAULT &trans
                        >;
                };

                nav_alt_layer {
                        bindings = <
   &trans &trans  &trans  &trans  &trans  &trans         &trans &trans  &trans &trans &trans &trans
   &trans &sk LSHFT &sk LCTRL &sk LGUI &sk LALT &trans              &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans &trans
                                   &trans &to NAV &kp BSPC   &kp SPC &trans &trans
                        >;
                };

                sys_layer {
                        bindings = <
   &trans  &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                                      &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &trans     
   &trans  &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_CLR       &rgb_ug RGB_TOG &kp C_VOL_UP &kp C_VOL_DOWN &none &kp F11 &trans
   &trans  &none &none &none  &none  &none                                          &out OUT_TOG &kp C_BRI_UP &kp C_BRI_DOWN &none &kp F12 &trans       
                                           &trans  &trans  &trans               &trans &trans &trans
                        >;
                };       
   
      };
};


&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <15>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};